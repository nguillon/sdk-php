<?php
/**
 * GatewayItemListResultItemMeta
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * GatewayItemListResultItemMeta Class Doc Comment
 *
 * @category    Class
 * @description Optional gateway specific metadata for the item.
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GatewayItemListResultItemMeta implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'amount' => 'string',
        'month' => 'string',
        'sender' => 'string',
        'hotel' => 'string',
        'booking_status' => 'string',
        'received' => 'string',
        'operation_number' => 'string',
        'invoice_number' => 'string',
        'invoice_date' => 'string',
        'period_of_travel' => 'string'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'amount' => 'amount',
        'month' => 'month',
        'sender' => 'sender',
        'hotel' => 'hotel',
        'booking_status' => 'booking_status',
        'received' => 'received',
        'operation_number' => 'operation_number',
        'invoice_number' => 'invoice_number',
        'invoice_date' => 'invoice_date',
        'period_of_travel' => 'period_of_travel'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'amount' => 'setAmount',
        'month' => 'setMonth',
        'sender' => 'setSender',
        'hotel' => 'setHotel',
        'booking_status' => 'setBookingStatus',
        'received' => 'setReceived',
        'operation_number' => 'setOperationNumber',
        'invoice_number' => 'setInvoiceNumber',
        'invoice_date' => 'setInvoiceDate',
        'period_of_travel' => 'setPeriodOfTravel'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'amount' => 'getAmount',
        'month' => 'getMonth',
        'sender' => 'getSender',
        'hotel' => 'getHotel',
        'booking_status' => 'getBookingStatus',
        'received' => 'getReceived',
        'operation_number' => 'getOperationNumber',
        'invoice_number' => 'getInvoiceNumber',
        'invoice_date' => 'getInvoiceDate',
        'period_of_travel' => 'getPeriodOfTravel'
    );
  
    
    /**
      * $amount Applies to the following gateway types: congstar.de, o2online.de
      * @var string
      */
    protected $amount;
    
    /**
      * $month Applies to the following gateway types: congstar.de
      * @var string
      */
    protected $month;
    
    /**
      * $sender Applies to the following gateway types: allianz.de
      * @var string
      */
    protected $sender;
    
    /**
      * $hotel Applies to the following gateway types: holidaycheck.de
      * @var string
      */
    protected $hotel;
    
    /**
      * $booking_status Applies to the following gateway types: holidaycheck.de
      * @var string
      */
    protected $booking_status;
    
    /**
      * $received Applies to the following gateway types: allianz.de
      * @var string
      */
    protected $received;
    
    /**
      * $operation_number Applies to the following gateway types: holidaycheck.de
      * @var string
      */
    protected $operation_number;
    
    /**
      * $invoice_number Applies to the following gateway types: congstar.de
      * @var string
      */
    protected $invoice_number;
    
    /**
      * $invoice_date Applies to the following gateway types: o2online.de
      * @var string
      */
    protected $invoice_date;
    
    /**
      * $period_of_travel Applies to the following gateway types: holidaycheck.de
      * @var string
      */
    protected $period_of_travel;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->amount = $data["amount"];
            $this->month = $data["month"];
            $this->sender = $data["sender"];
            $this->hotel = $data["hotel"];
            $this->booking_status = $data["booking_status"];
            $this->received = $data["received"];
            $this->operation_number = $data["operation_number"];
            $this->invoice_number = $data["invoice_number"];
            $this->invoice_date = $data["invoice_date"];
            $this->period_of_travel = $data["period_of_travel"];
        }
    }
    
    /**
     * Gets amount
     * @return string
     */
    public function getAmount()
    {
        return $this->amount;
    }
  
    /**
     * Sets amount
     * @param string $amount Applies to the following gateway types: congstar.de, o2online.de
     * @return $this
     */
    public function setAmount($amount)
    {
        
        $this->amount = $amount;
        return $this;
    }
    
    /**
     * Gets month
     * @return string
     */
    public function getMonth()
    {
        return $this->month;
    }
  
    /**
     * Sets month
     * @param string $month Applies to the following gateway types: congstar.de
     * @return $this
     */
    public function setMonth($month)
    {
        
        $this->month = $month;
        return $this;
    }
    
    /**
     * Gets sender
     * @return string
     */
    public function getSender()
    {
        return $this->sender;
    }
  
    /**
     * Sets sender
     * @param string $sender Applies to the following gateway types: allianz.de
     * @return $this
     */
    public function setSender($sender)
    {
        
        $this->sender = $sender;
        return $this;
    }
    
    /**
     * Gets hotel
     * @return string
     */
    public function getHotel()
    {
        return $this->hotel;
    }
  
    /**
     * Sets hotel
     * @param string $hotel Applies to the following gateway types: holidaycheck.de
     * @return $this
     */
    public function setHotel($hotel)
    {
        
        $this->hotel = $hotel;
        return $this;
    }
    
    /**
     * Gets booking_status
     * @return string
     */
    public function getBookingStatus()
    {
        return $this->booking_status;
    }
  
    /**
     * Sets booking_status
     * @param string $booking_status Applies to the following gateway types: holidaycheck.de
     * @return $this
     */
    public function setBookingStatus($booking_status)
    {
        
        $this->booking_status = $booking_status;
        return $this;
    }
    
    /**
     * Gets received
     * @return string
     */
    public function getReceived()
    {
        return $this->received;
    }
  
    /**
     * Sets received
     * @param string $received Applies to the following gateway types: allianz.de
     * @return $this
     */
    public function setReceived($received)
    {
        
        $this->received = $received;
        return $this;
    }
    
    /**
     * Gets operation_number
     * @return string
     */
    public function getOperationNumber()
    {
        return $this->operation_number;
    }
  
    /**
     * Sets operation_number
     * @param string $operation_number Applies to the following gateway types: holidaycheck.de
     * @return $this
     */
    public function setOperationNumber($operation_number)
    {
        
        $this->operation_number = $operation_number;
        return $this;
    }
    
    /**
     * Gets invoice_number
     * @return string
     */
    public function getInvoiceNumber()
    {
        return $this->invoice_number;
    }
  
    /**
     * Sets invoice_number
     * @param string $invoice_number Applies to the following gateway types: congstar.de
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        
        $this->invoice_number = $invoice_number;
        return $this;
    }
    
    /**
     * Gets invoice_date
     * @return string
     */
    public function getInvoiceDate()
    {
        return $this->invoice_date;
    }
  
    /**
     * Sets invoice_date
     * @param string $invoice_date Applies to the following gateway types: o2online.de
     * @return $this
     */
    public function setInvoiceDate($invoice_date)
    {
        
        $this->invoice_date = $invoice_date;
        return $this;
    }
    
    /**
     * Gets period_of_travel
     * @return string
     */
    public function getPeriodOfTravel()
    {
        return $this->period_of_travel;
    }
  
    /**
     * Sets period_of_travel
     * @param string $period_of_travel Applies to the following gateway types: holidaycheck.de
     * @return $this
     */
    public function setPeriodOfTravel($period_of_travel)
    {
        
        $this->period_of_travel = $period_of_travel;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
